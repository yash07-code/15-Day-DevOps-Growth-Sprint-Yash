ðŸ”” Day 13/15 â€“ DevOps Challenge: Observability & Proactive Alerting
In production systems, it's not just about monitoring â€” it's about knowing when and why things break, before users feel the impact.
 Today I explored the power of Prometheus + Grafana to set up intelligent alerts for both my CI/CD pipeline and Kubernetes cluster health.

Hereâ€™s what I accomplished:
âœ… Configured Prometheus alerting rules to detect pod crashes, high restarts, and Jenkins job failures.
 âœ… Set up AlertManager to forward notifications to Telegram, and also explored triggering n8n workflows for smart alert handling.
 âœ… Created Grafana dashboards with real-time graphs and threshold-based alerts (e.g. CPU usage, memory pressure, failed builds).
 âœ… Practiced writing custom alert expressions like:
 increase(kube_pod_container_status_restarts_total)

ðŸš¨ Now every failure in my DevOps pipeline triggers a real-time alert â€” no more silent breakdowns.
 Observability isn't a luxury â€” it's a necessity for reliability.

Next up: GitOps + Helm + ArgoCD full CI/CD sync ðŸ”„
 Letâ€™s keep shipping better, faster, safer ðŸš€
